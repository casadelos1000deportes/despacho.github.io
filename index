<!DOCTYPE html>
<html lang="es" data-bs-theme="light">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>DespachoHub Pro - Sistema de Gesti√≥n de √ìrdenes</title>
    
    <!-- Bootstrap 5.3 -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
    
    <!-- SweetAlert2 -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.10.1/dist/sweetalert2.min.css">
    
    <!-- Animate.css para micro-animaciones -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
    
    <style>
        /* CSS b√°sico para el formulario de recuperaci√≥n */
        :root {
            --primary: #3b82f6;
            --primary-dark: #2563eb;
            --primary-light: #60a5fa;
            --primary-rgb: 59, 130, 246;
        }
        
        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, rgba(59, 130, 246, 0.9) 0%, rgba(6, 182, 212, 0.8) 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .reset-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 1rem;
            border: 1px solid rgba(255, 255, 255, 0.2);
            box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 8px 10px -6px rgba(0, 0, 0, 0.1);
            max-width: 500px;
            width: 90%;
            padding: 2rem;
        }
        
        .loading-screen {
            text-center;
            padding: 3rem;
        }
        
        .spinner-border {
            width: 3rem;
            height: 3rem;
            border-width: 0.3em;
        }
        
        .form-control:focus {
            border-color: var(--primary);
            box-shadow: 0 0 0 0.25rem rgba(var(--primary-rgb), 0.15);
        }
        
        .btn-primary {
            background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
            border-color: var(--primary);
            color: white;
        }
        
        .btn-primary:hover {
            background: linear-gradient(135deg, var(--primary-dark) 0%, var(--primary) 100%);
            color: white;
        }
        
        .success-animation {
            color: #10b981;
            font-size: 4rem;
            animation: bounce 0.6s ease-in-out;
        }
        
        @keyframes bounce {
            0%, 20%, 60%, 100% {
                transform: translateY(0);
            }
            40% {
                transform: translateY(-10px);
            }
            80% {
                transform: translateY(-5px);
            }
        }
    </style>
</head>
<body>
    <!-- Loading inicial -->
    <div id="loadingScreen" class="reset-card">
        <div class="loading-screen">
            <div class="spinner-border text-primary mb-3" role="status">
                <span class="visually-hidden">Cargando...</span>
            </div>
            <h5>Validando token de recuperaci√≥n...</h5>
            <p class="text-muted">Por favor espera un momento</p>
        </div>
    </div>
    
    <!-- Formulario de restablecimiento -->
    <div id="resetForm" class="reset-card d-none">
        <div class="text-center mb-4">
            <div class="mb-3">
                <i class="bi bi-shield-lock text-primary" style="font-size: 3rem;"></i>
            </div>
            <h2 class="fw-bold">Restablecer Contrase√±a</h2>
            <p class="text-muted">Crea una nueva contrase√±a segura para tu cuenta</p>
        </div>
        
        <div class="alert alert-info mb-4">
            <i class="bi bi-info-circle me-2"></i>
            Tu contrase√±a debe tener al menos 6 caracteres
        </div>
        
        <form id="passwordForm">
            <div class="mb-3">
                <label for="newPassword" class="form-label">
                    <i class="bi bi-lock me-1"></i>Nueva Contrase√±a
                </label>
                <div class="input-group">
                    <input type="password" class="form-control form-control-lg" id="newPassword" 
                           placeholder="M√≠nimo 6 caracteres" required minlength="6">
                    <button class="btn btn-outline-secondary" type="button" id="toggleNew">
                        <i class="bi bi-eye"></i>
                    </button>
                </div>
            </div>
            
            <div class="mb-4">
                <label for="confirmPassword" class="form-label">
                    <i class="bi bi-lock-fill me-1"></i>Confirmar Contrase√±a
                </label>
                <div class="input-group">
                    <input type="password" class="form-control form-control-lg" id="confirmPassword" 
                           placeholder="Repite la contrase√±a" required>
                    <button class="btn btn-outline-secondary" type="button" id="toggleConfirm">
                        <i class="bi bi-eye"></i>
                    </button>
                </div>
            </div>
            
            <button type="submit" class="btn btn-primary btn-lg w-100" id="resetBtn">
                <i class="bi bi-shield-check me-2"></i>Cambiar Contrase√±a
            </button>
        </form>
    </div>
    
    <!-- Estado de √©xito -->
    <div id="successScreen" class="reset-card d-none">
        <div class="text-center">
            <i class="bi bi-check-circle-fill success-animation"></i>
            <h3 class="mt-3 mb-2">¬°Contrase√±a Actualizada!</h3>
            <p class="text-muted mb-4">Tu contrase√±a ha sido restablecida correctamente.</p>
            <button class="btn btn-primary btn-lg" onclick="abrirAplicacion()">
                <i class="bi bi-box-arrow-in-right me-2"></i>Ir a la aplicaci√≥n
            </button>
        </div>
    </div>
    
    <!-- Estado de error -->
    <div id="errorScreen" class="reset-card d-none">
        <div class="text-center">
            <i class="bi bi-exclamation-triangle text-danger" style="font-size: 4rem;"></i>
            <h3 class="mt-3 mb-2">Error</h3>
            <p id="errorMessage" class="text-muted mb-4">Token inv√°lido o expirado</p>
            <button class="btn btn-outline-primary" onclick="abrirAplicacion()">
                <i class="bi bi-arrow-left me-2"></i>Volver al login
            </button>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.10.1/dist/sweetalert2.all.min.js"></script>
    
    <script>
        // URL de tu Google Apps Script
        const GAS_URL = 'https://script.google.com/macros/s/AKfycbwDuPHeGVATHjXOf9lfvXxfh5G-cTzkARUXstMq0w8XakZn9AhnaH8hkM55DCSx1NvJ5A/exec';
        
        // Obtener par√°metros de la URL
        const urlParams = new URLSearchParams(window.location.search);
        const token = urlParams.get('token');
        const action = urlParams.get('action');
        
        console.log('üîë Token:', token);
        console.log('üìù Action:', action);
        
        // Variables globales
        let isValidToken = false;
        
        // Inicializar cuando el DOM est√© listo
        document.addEventListener('DOMContentLoaded', function() {
            if (token && action === 'reset') {
                validarToken();
            } else {
                // Si no hay token, redirigir a la aplicaci√≥n
                abrirAplicacion();
            }
            
            // Event listeners
            setupEventListeners();
        });
        
        function setupEventListeners() {
            // Toggle de contrase√±as
            document.getElementById('toggleNew').addEventListener('click', function() {
                togglePassword('newPassword', this);
            });
            
            document.getElementById('toggleConfirm').addEventListener('click', function() {
                togglePassword('confirmPassword', this);
            });
            
            // Validaci√≥n en tiempo real
            document.getElementById('confirmPassword').addEventListener('input', function() {
                validatePasswordMatch();
            });
            
            // Submit del formulario
            document.getElementById('passwordForm').addEventListener('submit', function(e) {
                e.preventDefault();
                resetPassword();
            });
        }
        
        async function validarToken() {
            try {
                console.log('üîç Validando token...');
                
                const response = await fetch(GAS_URL, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: new URLSearchParams({
                        action: 'validateToken',
                        token: token
                    })
                });
                
                const resultado = await response.json();
                
                if (resultado.success) {
                    console.log('‚úÖ Token v√°lido');
                    isValidToken = true;
                    mostrarFormulario();
                } else {
                    console.error('‚ùå Token inv√°lido:', resultado.message);
                    mostrarError(resultado.message || 'Token inv√°lido o expirado');
                }
                
            } catch (error) {
                console.error('‚ùå Error validando token:', error);
                mostrarError('Error de conexi√≥n. Intenta nuevamente.');
            }
        }
        
        async function resetPassword() {
            const newPassword = document.getElementById('newPassword').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            const resetBtn = document.getElementById('resetBtn');
            
            // Validaciones
            if (!newPassword || newPassword.length < 6) {
                document.getElementById('newPassword').classList.add('is-invalid');
                return;
            }
            
            if (newPassword !== confirmPassword) {
                document.getElementById('confirmPassword').classList.add('is-invalid');
                return;
            }
            
            // UI Loading state
            resetBtn.disabled = true;
            resetBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>Actualizando...';
            
            try {
                console.log('üîÑ Restableciendo contrase√±a...');
                
                const response = await fetch(GAS_URL, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: new URLSearchParams({
                        action: 'resetPassword',
                        token: token,
                        newPassword: newPassword
                    })
                });
                
                const resultado = await response.json();
                
                if (resultado.success) {
                    console.log('‚úÖ Contrase√±a actualizada');
                    mostrarExito();
                } else {
                    mostrarError(resultado.message || 'Error al restablecer la contrase√±a');
                }
                
            } catch (error) {
                console.error('‚ùå Error:', error);
                mostrarError('Error de conexi√≥n. Intenta nuevamente.');
            } finally {
                resetBtn.disabled = false;
                resetBtn.innerHTML = '<i class="bi bi-shield-check me-2"></i>Cambiar Contrase√±a';
            }
        }
        
        function togglePassword(inputId, button) {
            const input = document.getElementById(inputId);
            const icon = button.querySelector('i');
            
            if (input.type === 'password') {
                input.type = 'text';
                icon.className = 'bi bi-eye-slash';
            } else {
                input.type = 'password';
                icon.className = 'bi bi-eye';
            }
        }
        
        function validatePasswordMatch() {
            const newPass = document.getElementById('newPassword').value;
            const confirmPass = document.getElementById('confirmPassword').value;
            const confirmInput = document.getElementById('confirmPassword');
            
            if (confirmPass && newPass !== confirmPass) {
                confirmInput.classList.add('is-invalid');
            } else {
                confirmInput.classList.remove('is-invalid');
            }
        }
        
        function mostrarFormulario() {
            document.getElementById('loadingScreen').classList.add('d-none');
            document.getElementById('resetForm').classList.remove('d-none');
        }
        
        function mostrarExito() {
            document.getElementById('resetForm').classList.add('d-none');
            document.getElementById('successScreen').classList.remove('d-none');
        }
        
        function mostrarError(mensaje) {
            document.getElementById('loadingScreen').classList.add('d-none');
            document.getElementById('resetForm').classList.add('d-none');
            document.getElementById('errorMessage').textContent = mensaje;
            document.getElementById('errorScreen').classList.remove('d-none');
        }
        
        function abrirAplicacion() {
            // En lugar de redirigir, mostrar un iframe con la aplicaci√≥n
            mostrarIframeAplicacion();
        }
        
        function mostrarIframeAplicacion() {
            // Ocultar todos los contenedores actuales
            document.getElementById('loadingScreen').classList.add('d-none');
            document.getElementById('resetForm').classList.add('d-none');
            document.getElementById('successScreen').classList.add('d-none');
            document.getElementById('errorScreen').classList.add('d-none');
            
            // Crear y mostrar iframe
            document.body.innerHTML = `
                <iframe 
                    src="${GAS_URL}" 
                    width="100%" 
                    height="100vh" 
                    frameborder="0" 
                    style="position: fixed; top: 0; left: 0; width: 100%; height: 100vh; border: none; overflow: hidden;">
                </iframe>
            `;
        }
    </script>
</body>
</html>
